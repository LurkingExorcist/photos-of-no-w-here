version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
      target: builder # Stop at builder stage for development
    command: npm run dev
    ports:
      - "1111:1111" # Vite dev server port
    volumes:
      - ./packages/frontend:/app/packages/frontend
      - /app/packages/frontend/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - app-network
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      target: builder # Stop at builder stage for development
    command: npm run dev -w @photos-of-no-w-here/backend
    ports:
      - "3333:3333"
      - "9229:9229" # Node.js debug port
    volumes:
      - ./packages/backend:/app/packages/backend
      - /app/packages/backend/node_modules
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --save 60 1 --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
    driver: local 